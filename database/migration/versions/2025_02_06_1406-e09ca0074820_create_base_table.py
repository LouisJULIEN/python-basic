"""create base table

Revision ID: e09ca0074820
Revises: 
Create Date: 2025-02-06 14:06:37.763482

"""
from typing import Sequence, Union

import sqlalchemy as sa
import pgvector

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'e09ca0074820'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    conn = op.get_bind()
    conn.execute(sa.text('CREATE EXTENSION if not exists vector;'))

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('other_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recursive_example',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('other_table_id', sa.Integer(), nullable=True),
    sa.Column('parent_tag_id', sa.Integer(), nullable=True),
    sa.Column('category', sa.Text(), nullable=False),
    sa.Column('trait', sa.Text(), nullable=False),
    sa.Column('trait_content_vector', pgvector.sqlalchemy.vector.VECTOR(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['other_table_id'], ['other_table.id'], ),
    sa.ForeignKeyConstraint(['parent_tag_id'], ['recursive_example.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    pass
